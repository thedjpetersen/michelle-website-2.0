---
import '@/styles/globals.css';
import { Sun, Moon, Menu, Linkedin, Mail } from 'lucide-react';

interface Props {
  title: string;
}

const { title } = Astro.props;

const navigation = [
  { name: 'Home', href: '/' },
  { name: 'Experience', href: '/experience' },
  { name: 'Portfolio', href: '/portfolio' }
];
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Michelle Sentevski - Mechanical Product Design Engineer" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600&display=swap" rel="stylesheet">
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <style>
      @keyframes subtleFloat {
        0% { transform: translateY(0px); }
        50% { transform: translateY(-1px); }
        100% { transform: translateY(0px); }
      }
      
      @keyframes subtleGradient {
        0% { background-position: 0% 50%; }
        50% { background-position: 100% 50%; }
        100% { background-position: 0% 50%; }
      }

      @keyframes subtleRotate {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
      }

      @keyframes pulseGlow {
        0% { opacity: 0.5; }
        50% { opacity: 0.8; }
        100% { opacity: 0.5; }
      }

      .gradient-animate {
        background: linear-gradient(
          120deg,
          rgba(255, 255, 255, 0) 0%,
          rgba(var(--navy-500-rgb), 0.03) 15%,
          rgba(var(--navy-500-rgb), 0.03) 85%,
          rgba(255, 255, 255, 0) 100%
        );
        background-size: 200% 200%;
        animation: subtleGradient 15s ease infinite;
      }

      .dark .gradient-animate {
        background: linear-gradient(
          120deg,
          rgba(44, 61, 79, 0) 0%,
          rgba(255, 255, 255, 0.03) 15%,
          rgba(255, 255, 255, 0.03) 85%,
          rgba(44, 61, 79, 0) 100%
        );
      }

      :root {
        --base-text-color: oklch(0.556 0 0);
        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
      }

      .dark {
        --base-text-color: #E2E8F0;
      }

      body {
        font-family: 'Inter', sans-serif;
        font-feature-settings: "liga", "calt", "dlig", "ss07", "ss08", "zero", "tnum", "cv03", "cv04", "cv01", "cv09", "cv02";
        font-size: 14px;
        line-height: 20px;
        color: var(--base-text-color);
        tab-size: 4;
        text-size-adjust: 100%;
        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
      }

      .sidebar-text {
        color: var(--base-text-color);
        margin-top: 16px;
        pointer-events: auto;
        unicode-bidi: isolate;
        font-variation-settings: normal;
        border: 0px solid var(--base-text-color);
        font-size: 14px;
      }

      /* Smooth animations */
      @keyframes fadeIn {
        from { opacity: 0; transform: translateY(10px); }
        to { opacity: 1; transform: translateY(0); }
      }

      nav {
        animation: fadeIn 0.6s ease-out;
      }

      /* Enhanced hover effects */
      .nav-link {
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      }
      
      .nav-link:hover {
        transform: translateX(2px);
      }
    </style>
  </head>
  <body class="bg-slate-50/50 dark:bg-[#2C3D4F] antialiased gradient-animate">
    <!-- Mobile Header -->
    <header class="fixed top-0 left-0 right-0 backdrop-blur-xl bg-white/70 dark:bg-[#2C3D4F]/70 border-b border-slate-200/50 dark:border-slate-700/50 flex items-center justify-between px-6 h-16 md:hidden z-40">
      <div class="flex items-center space-x-3">
        <div class="w-8 h-8 rounded-full overflow-hidden">
          <img
            src="/michelle.png"
            alt="Michelle Sentevski"
            class="w-full h-full object-cover"
          />
        </div>
        <h1 class="text-[15px] tracking-tight font-medium text-slate-600 dark:text-slate-200">
          Michelle Sentevski
        </h1>
      </div>
      <button
        id="menuButton"
        class="p-2 rounded-lg text-slate-600 dark:text-slate-400 hover:bg-slate-100/50 dark:hover:bg-slate-700/50 transition-colors"
        aria-label="Toggle Menu"
      >
        <Menu className="w-5 h-5" />
      </button>
    </header>

    <div class="min-h-screen">
      <!-- Navigation -->
      <nav 
        id="sidebar"
        class="fixed top-0 left-0 w-[280px] h-full bg-slate-100 dark:bg-[#162030] border-r border-slate-200/50 dark:border-slate-700/50 transform -translate-x-full md:translate-x-0 transition-all duration-300 ease-out z-40"
      >
        <div class="flex flex-col h-full p-8">
          <div class="mb-12">
            <div class="w-20 h-20 rounded-full overflow-hidden mb-6 mx-auto">
              <img
                src="/michelle.png"
                alt="Michelle Sentevski"
                class="w-full h-full object-cover"
              />
            </div>
            <h1 class="text-lg font-medium text-slate-700 dark:text-slate-200 mb-2 text-center">Michelle Sentevski</h1>
            <p class="text-sm text-slate-500 dark:text-slate-400 text-center leading-relaxed">
              Mechanical engineer specializing in product design and development
            </p>
          </div>

          <ul class="space-y-1 mb-8">
            {navigation.map(({ name, href }) => (
              <li>
                <a
                  href={href}
                  data-nav-link
                  class:list={[
                    "block px-4 py-2 rounded-lg text-sm transition-colors nav-link",
                    Astro.url.pathname === href
                      ? "bg-slate-100 dark:bg-slate-700/50 text-navy-500 dark:text-white font-medium"
                      : "text-slate-600 dark:text-slate-400 hover:bg-slate-100/70 dark:hover:bg-slate-700/30 hover:text-navy-500 dark:hover:text-white"
                  ]}
                >
                  {name}
                </a>
              </li>
            ))}
          </ul>

          <div class="mt-auto flex items-center justify-between">
            <div class="flex items-center gap-3">
              <a
                href="https://linkedin.com/in/your-profile"
                target="_blank"
                rel="noopener noreferrer"
                class="p-2 text-slate-600 dark:text-slate-400 hover:text-navy-500 dark:hover:text-white transition-colors"
                aria-label="LinkedIn Profile"
              >
                <Linkedin className="w-4 h-4" />
              </a>
              <a
                href="mailto:your.email@example.com"
                class="p-2 text-slate-600 dark:text-slate-400 hover:text-navy-500 dark:hover:text-white transition-colors"
                aria-label="Email Me"
              >
                <Mail className="w-4 h-4" />
              </a>
            </div>
            
            <button
              id="themeToggle"
              class="p-2 text-slate-600 dark:text-slate-400 hover:text-navy-500 dark:hover:text-white transition-colors"
              aria-label="Toggle theme"
            >
              <Sun className="w-4 h-4 dark:hidden" />
              <Moon className="w-4 h-4 hidden dark:block" />
            </button>
          </div>
        </div>
      </nav>

      <!-- Main Content -->
      <main class="w-full md:ml-[280px] p-4 md:p-12 pt-20 md:pt-12 dark:bg-[#2C3D4F]">
        <div class="max-w-4xl">
          <slot />
        </div>
      </main>
    </div>

    <script>
      // Theme Switcher
      const theme = (() => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          return 'dark';
        }
        return 'light';
      })();
          
      if (theme === 'light') {
        document.documentElement.classList.remove('dark');
      } else {
        document.documentElement.classList.add('dark');
      }

      window.localStorage.setItem('theme', theme);
        const themeToggle = document.getElementById('themeToggle');

      document.addEventListener('DOMContentLoaded', () => {
        const menuButton = document.getElementById('menuButton');
        const sidebar = document.getElementById('sidebar');

        if (themeToggle) {
          themeToggle.addEventListener('click', (e) => {
            e.stopPropagation(); // Prevent event bubbling
            const element = document.documentElement;
            element.classList.toggle("dark");
            const isDark = element.classList.contains("dark");
            localStorage.setItem("theme", isDark ? "dark" : "light");
            debugger;
          });
        }

        if (menuButton) {
          menuButton.addEventListener('click', () => {
            const isHidden = sidebar.classList.contains('-translate-x-full');
            if (isHidden) {
              sidebar.classList.remove('-translate-x-full');
            } else {
              sidebar.classList.add('-translate-x-full');
            }
          });
        }
      });
    </script>
  </body>
</html>